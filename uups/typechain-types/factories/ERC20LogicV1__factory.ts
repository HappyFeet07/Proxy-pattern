/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20LogicV1, ERC20LogicV1Interface } from "../ERC20LogicV1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f55555053206578616d706c6500000000000000000000000000000000000000008152506040518060400160405280600481526020017f5555505300000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000b8565b508060049080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000168565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b600060028204905060018216806200018157607f821691505b602082108114156200019857620001976200019e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6113c980620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806352d1902d1161007157806352d1902d146101a357806370a08231146101c157806395d89b41146101f1578063a457c2d71461020f578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029f565b6040516100ce9190611088565b60405180910390f35b6100f160048036038101906100ec9190610cd7565b610331565b6040516100fe9190611052565b60405180910390f35b61010f61034f565b60405161011c919061118a565b60405180910390f35b61013f600480360381019061013a9190610c88565b610359565b60405161014c9190611052565b60405180910390f35b61015d610451565b60405161016a91906111a5565b60405180910390f35b61018d60048036038101906101889190610cd7565b61045a565b60405161019a9190611052565b60405180910390f35b6101ab610506565b6040516101b8919061106d565b60405180910390f35b6101db60048036038101906101d69190610c23565b610531565b6040516101e8919061118a565b60405180910390f35b6101f9610579565b6040516102069190611088565b60405180910390f35b61022960048036038101906102249190610cd7565b61060b565b6040516102369190611052565b60405180910390f35b61025960048036038101906102549190610cd7565b6106f6565b6040516102669190611052565b60405180910390f35b61028960048036038101906102849190610c4c565b610714565b604051610296919061118a565b60405180910390f35b6060600380546102ae906112c4565b80601f01602080910402602001604051908101604052809291908181526020018280546102da906112c4565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b600061034561033e61079b565b84846107a3565b6001905092915050565b6000600254905090565b600061036684848461096e565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103b161079b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289061110a565b60405180910390fd5b6104458561043d61079b565b8584036107a3565b60019150509392505050565b60006012905090565b60006104fc61046761079b565b84846001600061047561079b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104f791906111dc565b6107a3565b6001905092915050565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610588906112c4565b80601f01602080910402602001604051908101604052809291908181526020018280546105b4906112c4565b80156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b5050505050905090565b6000806001600061061a61079b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ce9061116a565b60405180910390fd5b6106eb6106e261079b565b858584036107a3565b600191505092915050565b600061070a61070361079b565b848461096e565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a9061114a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a906110ca565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610961919061118a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d59061112a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a45906110aa565b60405180910390fd5b610a59838383610bef565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad6906110ea565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b7291906111dc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd6919061118a565b60405180910390a3610be9848484610bf4565b50505050565b505050565b505050565b600081359050610c0881611365565b92915050565b600081359050610c1d8161137c565b92915050565b600060208284031215610c3557600080fd5b6000610c4384828501610bf9565b91505092915050565b60008060408385031215610c5f57600080fd5b6000610c6d85828601610bf9565b9250506020610c7e85828601610bf9565b9150509250929050565b600080600060608486031215610c9d57600080fd5b6000610cab86828701610bf9565b9350506020610cbc86828701610bf9565b9250506040610ccd86828701610c0e565b9150509250925092565b60008060408385031215610cea57600080fd5b6000610cf885828601610bf9565b9250506020610d0985828601610c0e565b9150509250929050565b610d1c81611244565b82525050565b610d2b81611250565b82525050565b6000610d3c826111c0565b610d4681856111cb565b9350610d56818560208601611291565b610d5f81611354565b840191505092915050565b6000610d776023836111cb565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ddd6022836111cb565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e436026836111cb565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ea96028836111cb565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f0f6025836111cb565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f756024836111cb565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fdb6025836111cb565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61103d8161127a565b82525050565b61104c81611284565b82525050565b60006020820190506110676000830184610d13565b92915050565b60006020820190506110826000830184610d22565b92915050565b600060208201905081810360008301526110a28184610d31565b905092915050565b600060208201905081810360008301526110c381610d6a565b9050919050565b600060208201905081810360008301526110e381610dd0565b9050919050565b6000602082019050818103600083015261110381610e36565b9050919050565b6000602082019050818103600083015261112381610e9c565b9050919050565b6000602082019050818103600083015261114381610f02565b9050919050565b6000602082019050818103600083015261116381610f68565b9050919050565b6000602082019050818103600083015261118381610fce565b9050919050565b600060208201905061119f6000830184611034565b92915050565b60006020820190506111ba6000830184611043565b92915050565b600081519050919050565b600082825260208201905092915050565b60006111e78261127a565b91506111f28361127a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611227576112266112f6565b5b828201905092915050565b600061123d8261125a565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156112af578082015181840152602081019050611294565b838111156112be576000848401525b50505050565b600060028204905060018216806112dc57607f821691505b602082108114156112f0576112ef611325565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61136e81611232565b811461137957600080fd5b50565b6113858161127a565b811461139057600080fd5b5056fea2646970667358221220c551256e14b2cdd84ab00cfea833f369903a7848ce7faaed38e93d25524e1e8e64736f6c63430008000033";

type ERC20LogicV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20LogicV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20LogicV1__factory extends ContractFactory {
  constructor(...args: ERC20LogicV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20LogicV1> {
    return super.deploy(overrides || {}) as Promise<ERC20LogicV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20LogicV1 {
    return super.attach(address) as ERC20LogicV1;
  }
  connect(signer: Signer): ERC20LogicV1__factory {
    return super.connect(signer) as ERC20LogicV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20LogicV1Interface {
    return new utils.Interface(_abi) as ERC20LogicV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20LogicV1 {
    return new Contract(address, _abi, signerOrProvider) as ERC20LogicV1;
  }
}
