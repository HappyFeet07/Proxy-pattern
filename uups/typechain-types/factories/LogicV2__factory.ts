/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LogicV2, LogicV2Interface } from "../LogicV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "updateCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a5e806100206000396000f3fe60806040526004361061007b5760003560e01c806370a082311161004e57806370a08231146101285780638129fc1c146101655780638da5cb5b1461017c578063d0e30db0146101a75761007b565b8063158ef93e146100805780632e1a7d4d146100ab57806346951954146100d457806352d1902d146100fd575b600080fd5b34801561008c57600080fd5b506100956101b1565b6040516100a29190610816565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610687565b6101c4565b005b3480156100e057600080fd5b506100fb60048036038101906100f69190610635565b6102e7565b005b34801561010957600080fd5b50610112610349565b60405161011f9190610831565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610635565b610374565b60405161015c91906108ac565b60405180910390f35b34801561017157600080fd5b5061017a6103bc565b005b34801561018857600080fd5b506101916103c6565b60405161019e91906107d2565b60405180910390f35b6101af6103ec565b005b600160149054906101000a900460ff1681565b806101ce33610374565b101561020f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102069061086c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610255573d6000803e3d6000fd5b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a4919061092e565b925050819055507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433826040516102dc9291906107ed565b60405180910390a150565b60011515600160149054906101000a900460ff1615151461033d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103349061088c565b60405180910390fd5b610346816104d2565b50565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103c46105da565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60011515600160149054906101000a900460ff16151514610442576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104399061088c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461049091906108d8565b925050819055507fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c33346040516104c89291906107ed565b60405180910390a1565b8073ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561051857600080fd5b505afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610550919061065e565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab9061084c565b60405180910390fd5b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75550565b60018060146101000a81548160ff021916908315150217905550565b600081359050610605816109e3565b92915050565b60008151905061061a816109fa565b92915050565b60008135905061062f81610a11565b92915050565b60006020828403121561064757600080fd5b6000610655848285016105f6565b91505092915050565b60006020828403121561067057600080fd5b600061067e8482850161060b565b91505092915050565b60006020828403121561069957600080fd5b60006106a784828501610620565b91505092915050565b6106b981610962565b82525050565b6106c881610974565b82525050565b6106d781610980565b82525050565b60006106ea600e836108c7565b91507f4e6f7420636f6d70617469626c650000000000000000000000000000000000006000830152602082019050919050565b600061072a601a836108c7565b91507f5769746864726177206d6f7265207468616e2062616c616e63650000000000006000830152602082019050919050565b600061076a6032836108c7565b91507f546865206c696272617279206973206c6f636b65642e204e6f2064697265637460008301527f202763616c6c2720697320616c6c6f77656400000000000000000000000000006020830152604082019050919050565b6107cc816109aa565b82525050565b60006020820190506107e760008301846106b0565b92915050565b600060408201905061080260008301856106b0565b61080f60208301846107c3565b9392505050565b600060208201905061082b60008301846106bf565b92915050565b600060208201905061084660008301846106ce565b92915050565b60006020820190508181036000830152610865816106dd565b9050919050565b600060208201905081810360008301526108858161071d565b9050919050565b600060208201905081810360008301526108a58161075d565b9050919050565b60006020820190506108c160008301846107c3565b92915050565b600082825260208201905092915050565b60006108e3826109aa565b91506108ee836109aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610923576109226109b4565b5b828201905092915050565b6000610939826109aa565b9150610944836109aa565b925082821015610957576109566109b4565b5b828203905092915050565b600061096d8261098a565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6109ec81610962565b81146109f757600080fd5b50565b610a0381610980565b8114610a0e57600080fd5b50565b610a1a816109aa565b8114610a2557600080fd5b5056fea26469706673582212209a3bb45f378079e32ff0178577e43846537f445b99e0d7f5016f94bffadaa34264736f6c63430008000033";

type LogicV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogicV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LogicV2__factory extends ContractFactory {
  constructor(...args: LogicV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LogicV2> {
    return super.deploy(overrides || {}) as Promise<LogicV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LogicV2 {
    return super.attach(address) as LogicV2;
  }
  connect(signer: Signer): LogicV2__factory {
    return super.connect(signer) as LogicV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogicV2Interface {
    return new utils.Interface(_abi) as LogicV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LogicV2 {
    return new Contract(address, _abi, signerOrProvider) as LogicV2;
  }
}
