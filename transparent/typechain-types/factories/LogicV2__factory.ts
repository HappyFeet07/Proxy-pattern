/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LogicV2, LogicV2Interface } from "../LogicV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061063a806100206000396000f3fe60806040526004361061004a5760003560e01c80632e1a7d4d1461004f5780633659cfe61461007857806370a08231146100a15780638da5cb5b146100de578063d0e30db014610109575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906103ca565b610113565b005b34801561008457600080fd5b5061009f600480360381019061009a91906103a1565b610235565b005b3480156100ad57600080fd5b506100c860048036038101906100c391906103a1565b610279565b6040516100d591906104b5565b60405180910390f35b3480156100ea57600080fd5b506100f36102c1565b6040516101009190610451565b60405180910390f35b6101116102e7565b005b8061011d33610279565b1161015d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015490610495565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101a3573d6000803e3d6000fd5b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f29190610537565b925050819055507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364338260405161022a92919061046c565b60405180910390a150565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461033591906104e1565b925050819055507fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c333460405161036d92919061046c565b60405180910390a1565b600081359050610386816105d6565b92915050565b60008135905061039b816105ed565b92915050565b6000602082840312156103b357600080fd5b60006103c184828501610377565b91505092915050565b6000602082840312156103dc57600080fd5b60006103ea8482850161038c565b91505092915050565b6103fc8161056b565b82525050565b600061040f601a836104d0565b91507f5769746864726177206d6f7265207468616e2062616c616e63650000000000006000830152602082019050919050565b61044b8161059d565b82525050565b600060208201905061046660008301846103f3565b92915050565b600060408201905061048160008301856103f3565b61048e6020830184610442565b9392505050565b600060208201905081810360008301526104ae81610402565b9050919050565b60006020820190506104ca6000830184610442565b92915050565b600082825260208201905092915050565b60006104ec8261059d565b91506104f78361059d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561052c5761052b6105a7565b5b828201905092915050565b60006105428261059d565b915061054d8361059d565b9250828210156105605761055f6105a7565b5b828203905092915050565b60006105768261057d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6105df8161056b565b81146105ea57600080fd5b50565b6105f68161059d565b811461060157600080fd5b5056fea264697066735822122099fd78622d7c8a38a2a3f00f8208e470c00bb98b0f992e0dd0093ccd6fb961b864736f6c63430008000033";

type LogicV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogicV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LogicV2__factory extends ContractFactory {
  constructor(...args: LogicV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LogicV2> {
    return super.deploy(overrides || {}) as Promise<LogicV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LogicV2 {
    return super.attach(address) as LogicV2;
  }
  connect(signer: Signer): LogicV2__factory {
    return super.connect(signer) as LogicV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogicV2Interface {
    return new utils.Interface(_abi) as LogicV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LogicV2 {
    return new Contract(address, _abi, signerOrProvider) as LogicV2;
  }
}
